name: Single clone Bioconductor packages to SWIFT buckets
on:
  workflow_dispatch: {}

jobs:
  swiftclone1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Start k8s locally
        uses: jupyterhub/action-k3s-helm@v1
        with:
          k3s-version: v1.19.10+k3s1 # releases:  https://github.com/k3s-io/k3s/tags
      - name: Verify function of k8s, kubectl, and helm
        run: |
          kubectl version
          helm version
      - name: Claim list
        id: list
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin main
          export first=$(head -n 1 lists/todo.txt)
          mkdir -p lists/claimed/$(dirname $first) && mv lists/$first lists/claimed/$first && tail -n +2 "lists/todo.txt" > "lists/todo.txt.tmp" && mv "lists/todo.txt.tmp" "lists/todo.txt"
          git add lists
          git commit -m "Claim $first"
          git push
          echo "::set-output name=path::$(echo $first)"
      - name: Helm install clone jobs
        run: echo "$CB_TACC_CREDS" > /tmp/creds && helm install data-clone ./cloner --set-file extraFileMappings."/root/\.cloudbridge".content=/tmp/creds --set-file configs."list\.txt"=lists/claimed/${{steps.list.outputs.path}}
        env:
          CB_TACC_CREDS: ${{secrets.CB_TACC_CREDS}}
      - name: Get logs and events
        run: sh -c "while true; do kubectl get events > /tmp/events && tail /tmp/events && sleep 5 && kubectl logs $(kubectl get pods | grep -o 'data-clone-[^ ]*')  > /tmp/logs && tail /tmp/logs && sleep 5; done;" & kubectl wait --for=condition=complete --timeout=6000s job/data-clone
        continue-on-error: true
      - name: Done list
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          mkdir -p lists/done/$(dirname ${{steps.list.outputs.path}}) && mv lists/claimed/${{steps.list.outputs.path}} lists/done/${{steps.list.outputs.path}}
          git pull origin main
          git add lists
          git commit -m "Done ${{steps.list.outputs.path}}"
          git push
